#!/bin/bash

cd /webapps/${REPO_DIR_NAME}/

if [[ -z ${VIRTUALENV_DIR_NAME} ]] ; then
    export VIRTUALENV_DIR_NAME=${DJANGO_PROJECT_NAME}
fi
export VIRTUALENV_PATH="/.virtualenvs/${DJANGO_PROJECT_NAME}/"

if [[ -z ${GUNICORN_CONF} ]] ; then
    GUNICORN_CONF="--config=/etc/gunicorn/gunicorn.conf.py"
fi

if [[ -z ${NO_GUNICORN} ]] ; then
    NO_GUNICORN="false"
fi

if [[ -z ${SETTINGS_FLAVOR} ]]; then
    # PRODUCTION
    exec ${VIRTUALENV_PATH}bin/gunicorn ${DJANGO_PROJECT_NAME}.wsgi:application ${GUNICORN_CONF}
elif [[ ${SETTINGS_FLAVOR} = "development" ]] && [[ ${NO_GUNICORN} = "true" ]] ; then
    # While gunicorn auto reload is not implemented yet..
    # https://github.com/benoitc/gunicorn/issues/526
    while ! ${VIRTUALENV_PATH}bin/python manage.py runserver 0.0.0.0:8000 ; do
        # supervisor can't kill the django runserver.
        # yes, I've tried this: https://coderwall.com/p/4tcw7w
        kill $(ps aux | grep '[m]anage.py runserver' | awk '{print $2}')
        # especially when a syntax error in your django app kills the proccess
        # the supervisor give up, but this will make sure to keep trying
        echo "starting again with: manage.py runserver"
        sleep 2
        exec /opt/run/run_app_server
    done
elif [ ${SETTINGS_FLAVOR} = "development" ] ; then
    # you can set some custom settings for development env
    exec ${VIRTUALENV_PATH}bin/gunicorn ${DJANGO_PROJECT_NAME}.wsgi:application ${GUNICORN_CONF}
fi